worker_processes 1;

events { worker_connections 1024; }

http {

    sendfile on;

    upstream nifi_cluster {
        server nifi0:18443;
        server nifi1:18444;
    }

    # Use dnsmasq so that 'nifi0' and 'nifi1' can be resolved by /etc/hosts
    resolver 127.0.0.1;

    # If target node is not specified, use one from cluster.
    map $http_host $nifi {
        nifi0.example.com:17443 "nifi0:18443";
        nifi1.example.com:17443 "nifi1:18444";
        default "nifi_cluster";
    }


    # Generic NiFi HTTPS traffic
    server {
        listen 17443 ssl;
        server_name ~^(.+\.example\.com)$;
        ssl_certificate /etc/nginx/nginx.crt;
        ssl_certificate_key /etc/nginx/nginx.key;

        ssl_client_certificate /etc/nginx/nifi-cert.pem; 
        ssl_verify_client on;

        proxy_ssl_certificate /etc/nginx/nginx.crt;
        proxy_ssl_certificate_key /etc/nginx/nginx.key;
        proxy_ssl_trusted_certificate /etc/nginx/nifi-cert.pem;

        location / {
            proxy_pass https://$nifi;
            proxy_set_header X-ProxyScheme https;
            proxy_set_header X-ProxyHost $1;
            proxy_set_header X-ProxyPort 17443;
            proxy_set_header X-ProxyContextPath /;
            proxy_set_header X-ProxiedEntitiesChain "<${ssl_client_s_dn}>";
        }
    }

}

