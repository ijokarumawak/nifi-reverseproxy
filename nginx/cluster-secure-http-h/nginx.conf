worker_processes 1;

events { worker_connections 1024; }

http {

    sendfile on;

    upstream nifi_cluster {
        server nifi0:18443;
        server nifi1:18444;
    }

    # Use dnsmasq so that 'nifi0' and 'nifi1' can be resolved by /etc/hosts
    resolver 127.0.0.1;

    # Generic NiFi HTTPS traffic
    server {
        listen 17543 ssl;
        server_name nginx.example.com;
        ssl_certificate /etc/nginx/nginx.crt;
        ssl_certificate_key /etc/nginx/nginx.key;

        proxy_ssl_certificate /etc/nginx/nginx.crt;
        proxy_ssl_certificate_key /etc/nginx/nginx.key;
        proxy_ssl_trusted_certificate /etc/nginx/nifi-cert.pem;

        location / {

            # If target node is not specified, use one from cluster.
            set $nifi "nifi_cluster";
            if ($http_x_nifi_site_to_site_target_peer) {
                set $nifi $http_x_nifi_site_to_site_target_peer;
            }

            proxy_pass https://$nifi;
            proxy_set_header X-ProxyScheme https;
            proxy_set_header X-ProxyHost nginx.example.com;
            proxy_set_header X-ProxyPort 17543;
            proxy_set_header X-ProxyContextPath /;
            proxy_set_header X-ProxiedEntitiesChain $ssl_client_s_dn;
        }
    }

}

