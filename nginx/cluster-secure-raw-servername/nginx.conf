worker_processes 1;

events { worker_connections 1024; }

http {

    sendfile on;

    upstream nifi {
        server 192.168.99.1:18443;
        server 192.168.99.1:18444;
    }

    server {
        listen 17590 ssl;
        server_name nginx.example.com;
        ssl_certificate /etc/nginx/nginx.crt;
        ssl_certificate_key /etc/nginx/nginx.key;

        proxy_ssl_certificate /etc/nginx/nginx.crt;
        proxy_ssl_certificate_key /etc/nginx/nginx.key;
        proxy_ssl_trusted_certificate /etc/nginx/nifi-cert.pem;

        location / {
            proxy_pass https://nifi;
            proxy_set_header X-ProxyScheme https;
            proxy_set_header X-ProxyHost nginx.example.com;
            proxy_set_header X-ProxyPort 17590;
            proxy_set_header X-ProxyContextPath /;
            proxy_set_header X-ProxiedEntitiesChain $ssl_client_s_dn;
        }
    }


}


stream {

    map $ssl_preread_server_name $nifi {
        nifi0.example.com nifi0;
        nifi1.example.com nifi1;
        default nifi0;
    }

    # Use dnsmasq so that 'nifi0' and 'nifi1' can be resolved by /etc/hosts
    resolver 127.0.0.1;

    # RAW S2S
    server {
        listen 17591;
        proxy_pass $nifi:18491;
    }

}

